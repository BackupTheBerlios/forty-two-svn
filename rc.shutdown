#!/usr/bin/python
#
# /etc/rc.shutdown: system shutdown script
#Copyright 2004 Forty-two <http://forty-two.berlios.de>
# Released under a BSD licence
# coded by sethgeekx86

#todo
#1 figure out a way to make a runlevel script , line 64-68
#2 figure prelevel , and all that other stuff for the big 27-41

# Load python system modules
from os import system
from os import path


# Load configuration   
system( ". /etc/rc.conf" )

# Set linefeed mode to avoid staircase effect
system( "/bin/stty onlcr" )



print "The system is shuting down.  Please wait......\n"

######################################################################
if [ "$PREVLEVEL" = "2" ]; then
	# Shutdown services
	if [ "${SERVICES[*]}" ]; then
		for service in "${SERVICES[@]}"; do
			R_SERVICES=($service ${R_SERVICES[@]})
		done
		for service in "${R_SERVICES[@]}"; do
			/etc/rc.d/$service stop &> /tmp/rc.$$
			/usr/bin/logger -t $service -f /tmp/rc.$$
			/bin/rm -f /tmp/rc.$$
		done
	fi
fi
################################################################################
# Terminate all processes
system ( "/sbin/killall5 -15 &> /dev/null" )
system ( "/usr/bin/sleep 5" )
system ( "/sbin/killall5 -9 &> /dev/null" )

# Save random seed
system ( "/bin/dd if=/dev/urandom of=/var/tmp/random-seed count=1 2> /dev/null" )

# Save system clock
system ( "/sbin/hwclock --systohc" )

# Write to wtmp file before unmounting
system ( "/sbin/halt -w" )

# Turn off swap
system ( "/sbin/swapoff -a" )

# Umount file systems
system ( "/bin/umount -a" )

# Remount root filesystem read-only
system ( "/bin/mount -n -o remount,ro /" )

# Power off or reboot
if runlevel == 2:
 system( "/sbin/poweroff -d -f -i" )
else:
 system( "/sbin/reboot -d -f -i" )

# End of script!
