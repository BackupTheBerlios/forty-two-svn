#!/usr/bin/python
#
# /etc/rc.multi - Multi-user startup script (runlevel 3)
# Copyright 2004 Forty-two <http://forty-two.berlios.de>
# Released under a BSD license
# 
# Version 0.12c - Works and is pretty :)
#
# Needed from /etc/initconf.py:
# services - Array of daemons
# backup - yes or no as to whether to back up or not
# backups - Array of files to backup
#

# Load system module
from os import system

# Load path module
from os import path

# Import variables from /etc/initconf.py
import initconf


# Start services
if initconf.daemons[0] != "":
	print "\x1b[1;37m>>\x1b[0m Starting daemons:"
	for daemon in initconf.daemons:
		print "\x1b[1;36m>>>\x1b[0m Starting",daemon
		
		# Make sure there's a script for it
		tmplocation = "/etc/rc.d/"+daemon
		location = path.exists( tmplocation )
		if location:
			# Start the daemon
			tmp = "/etc/rc.d/"+daemon+" start &> /tmp/rc.$$ || echo -n [\"ERROR\"]"
			system( tmp )
			# Log it and clean up
			tmp = "/usr/bin/logger -t "+daemon+" -f /tmp/rc.$$"
			system( tmp )
			system( "/bin/rm -f /tmp/rc.$$" )
			print "\x1b[1;32mDONE\x1b[0m\n"
		else:
			print "\x1b[1;31mERROR: No service",daemon+"!\x1b[0m\n"

# Run the user's local script (if it exists)
tmp = path.exists( "/etc/rc.local" )
if tmp:
	system( "/bin/bash /etc/rc.local" )

# Backup files if necessary
if initconf.backup == "yes":
	if initconf.backups != "":
		print "\x1b[1;37m>>\x1b[0m Backing up files:"
		for file in initconf.backups:
			print "\x1b[1;36m>>>\x1b[0m Backing up",file
			tmp = "cp "+file+" /var/backup"
			system( tmp )
	else:		   
		# No, it's not a typo; 31 is red
		print "\x1b[1;31mERROR: No backups defined in /etc/initconf.py!\x1b[0m"

print "\x1b[1;32mDONE\x1b[0m"

system( "/usr/bin/clear" )
print "\x1b[1;37mPynux v0.01 - Booted by Forty-two\x1b[0m"
print "\x1b[1;37mWelcome to",initconf.hostname+"!\x1b[0m" 

# End of file
#