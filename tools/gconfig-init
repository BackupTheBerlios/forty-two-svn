#!/usr/bin/env python
#
# example of pyGTK with tables
#

import pygtk
pygtk.require( "2.0" )
import gtk

class MainWindow:
	def delete_event( self, widget, event, data=None ):
		gtk.main_quit()
		return gtk.FALSE

	def help_click( self, widget, data=None):
		print "Yippeee!"

	def forward_clicked( self, widget, data=None ):
		if data == "part 1":
			self.part1()
		
		if data == "part 2":
			TIMEZONE = self.text1.get_text()
			FONT = self.text2.get_text()
			KEYMAP = self.text3.get_text()
			print TIMEZONE,FONT,KEYMAP

	def part1( self ):
		self.window1.hide()
		
		# Remove unnecessary items from table
		self.main_table.remove( self.gimage )

		# Make labels 2 and 3
		self.label2 = gtk.Label( "Timezone:" )
		self.label3 = gtk.Label( "Keymap:" )

		# Make text entry boxes
		self.text1 = gtk.Entry( 0 )
		self.text2 = gtk.Entry( 0 )
		self.text3 = gtk.Entry( 0 )
		
		# Set label 1
		self.label1.set_text( "Font:" )

		# When 'Forward' or 'Help' are clicked...
		self.forward_button.connect( "clicked", self.forward_clicked, "part 2" )
		self.help_button.connect( "clicked", self.help_click, "1" )

		# Add the new stuff to table
		self.main_table.remove( self.label1 )
		self.main_table.remove( self.quit_button)
		self.main_table.attach( self.label2, 0, 1, 0, 1 )
		self.main_table.attach( self.text1, 1, 3, 0, 1 )
		self.main_table.attach( self.label1, 0, 1, 1, 2 )
		self.main_table.attach( self.text2, 1, 3, 1, 2 )
		self.main_table.attach( self.label3, 0, 1, 2, 3 )
		self.main_table.attach( self.text3, 1, 3, 2, 3 )
		self.main_table.attach( self.help_button, 2, 3, 3, 4 )
		self.main_table.attach( self.quit_button, 0, 1, 3, 4 )
		
		# Show everything
		self.label2.show()
		self.text1.show()
		self.text2.show()
		self.label3.show()
		self.text3.show()
		self.help_button.show()
		self.window1.show()
		

	def __init__( self ):

		# Start the window
		self.window1 = gtk.Window( gtk.WINDOW_TOPLEVEL )
		self.window1.set_title( "gConfig-Init" )
		self.window1.connect( "delete_event", self.delete_event )
		self.window1.set_border_width( 20 )

		# Make the table
		self.main_table = gtk.Table( 4, 4, gtk.FALSE )
		self.window1.add( self.main_table )

		# Load the image
		self.gimage = gtk.Image()
		self.gimage.set_from_file( "/home/kyle/devel/pynux/forty-two/tools/imgs/gconfig-init.png" )
		
		# Make a label for the middle of the table
		self.label1 = gtk.Label( "Welcome to gConfig-Init. This tool will help you configure your init scripts - telling your system what to load at boot. You may click 'Quit' to exit this program. No changes to your system will be made without prompting you. Hit 'Forward' to continue." )
		self.label1.set_line_wrap( gtk.TRUE )
		self.main_table.set_row_spacings( 5 )
		self.main_table.set_col_spacings( 5 )

		# Make a 'Forward' button
		self.forward_button = gtk.Button( "Forward", gtk.STOCK_GO_FORWARD )
		self.forward_button.connect( "clicked", self.forward_clicked, "part 1" )

		# Make a 'Cancel' button
		self.cancel_button = gtk.Button( "Cancel", gtk.STOCK_CANCEL )

		# Make a 'Quit' button
		self.quit_button = gtk.Button( "Quit", gtk.STOCK_QUIT )
		self.quit_button.connect( "clicked", lambda w: gtk.main_quit() )

		# Make a 'Help' button
		self.help_button = gtk.Button( "Help", gtk.STOCK_HELP )

		# Attach everything to the table
		self.main_table.attach( self.gimage, 0, 4, 0, 1 )
		self.main_table.attach( self.label1, 1, 3, 1, 2 )
		self.main_table.attach( self.forward_button, 3, 4, 3, 4 )
		self.main_table.attach( self.quit_button, 1, 2, 3, 4 )
		
		# Show everything
		self.gimage.show()
		self.label1.show()
		self.forward_button.show()
		self.quit_button.show()
		self.main_table.show()
		self.window1.show()

def main():
	gtk.main()
	return 0

if __name__ == "__main__":
	MainWindow()
	main()
